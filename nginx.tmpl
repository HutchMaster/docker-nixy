# Example template of how to use Nginx to load balance TCP and UDP.
worker_processes auto;
pid /var/run/nginx.pid;
user root;

events {
    use epoll;
    worker_connections 10000;
}
stream {
        log_format basic '$remote_addr [$time_local] '
                    '$protocol $status $bytes_sent $bytes_received '
                    '$session_time' '$sessionPort';
        js_include stream.js;

        js_set $sessionPort getSessionPort;

        upstream udp_upstreams {
        {{- range $appid, $app := .Apps}}
        {{- range $label, $label := $app.Labels}}
        {{- if eq $label "UDPLoadBalanced"  }}
        {{- range $task := $app.Tasks}}
            server {{ $task.Host }}:{{ index $task.Ports 1 }};
        {{- end}}
        {{- end}}
        {{- end}}
        {{- end}}
        }

        map $sessionPort $server_choice {
        {{- range $appid, $app := .Apps}}
        {{- range $label, $label := $app.Labels}}
        {{- if eq $label "UDPLoadBalanced"  }}
        {{- range $index, $task := $app.Tasks}}
        {{- if eq $index 0}}
        {{- end}}
            {{- $ip := split $task.Host "."}}
            {{index $ip 3}}{{ index $task.Ports 1 }} {{ $task.Host }}:{{ index $task.Ports 1 }};
        {{- end}}
        {{- end}}
        {{- end}}
        {{- end}}
        }

    server {
        listen 10500 udp;
        access_log /var/log/nginx/access.log basic;
        proxy_timeout 1s;
        js_filter getSessionPort;
        proxy_pass $server_choice;
        #proxy_bind $remote_addr:$remote_port transparent;
    }
}